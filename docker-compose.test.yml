services:
  rabbitmq:
    image: rabbitmq:3-management
    networks:
      - rls_buddy_test_network

  api-gateway:
    build:
      context: ./api_gateway
    ports:
      - "8080:8000"  # Test API Gateway port
    depends_on:
      - user-service
      - tracking-service
      - rabbitmq
    entrypoint: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - rls_buddy_test_network

  user-service:
    build:
      context: ./user_service
    environment:
      - DATABASE_URL=postgresql://user:password@user_db/users
      - SECRET_KEY=mysecretkey
    depends_on:
      - user_db
      - rabbitmq
    entrypoint: ["/app/wait-for-it.sh", "user_db:5432", "--", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]
    networks:
      - rls_buddy_test_network

  tracking-service:
    build:
      context: ./tracking_service
    environment:
      - DATABASE_URL=postgresql://user:password@tracking_db/trackings
      - SECRET_KEY=mysecretkey
      - USER_SERVICE_URL=http://user-service:8001
    depends_on:
      - tracking_db
      - rabbitmq
    entrypoint: ["sh", "-c", "./wait-for-it.sh rabbitmq:5672 -- ./wait-for-it.sh tracking_db:5432 -- uvicorn main:app --host 0.0.0.0 --port 8002 --reload"]
    networks:
      - rls_buddy_test_network

  user_db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - user_db_data:/var/lib/postgresql/data
    networks:
      - rls_buddy_test_network

  tracking_db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: trackings
    volumes:
      - tracking_db_data:/var/lib/postgresql/data
    networks:
      - rls_buddy_test_network

volumes:
  user_db_data:
  tracking_db_data:

networks:
  rls_buddy_test_network:
    driver: bridge
